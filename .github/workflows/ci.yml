name: CI Pipeline

on: 
  push: 
    branches: 
      - main 
  pull_request: 
    branches: 
      - main 

jobs: 
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'  # Specify the Python version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Ensure you have this file

      - name: Run unit tests
        run: |
          pytest  # Or any other command to run your unit tests

      - name: Send email notification on failure
        if: failure()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          subject: "CI Pipeline Failure Notification"
          body: "The CI pipeline has failed. Please check the logs for details."
          to: "lesliejoycekk@gmail.com"
          from: "kakeuleslie@gmail.com"

  build:
    runs-on: ubuntu-latest
    needs: test  # This ensures the build job runs only if the test job succeeds

    steps: 
      - name: Checkout code 
        uses: actions/checkout@v3 

      - name: Set up Python 
        uses: actions/setup-python@v4 
        with: 
          python-version: '3.13'  # Specify the Python version

      - name: Install dependencies 
        run: | 
          python -m pip install --upgrade pip 
          pip install -r requirements.txt  # Ensure you have this file

      - name: Build Docker image
        run: |
          docker build -t leslie18/ubuntu:latest .

      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Push Docker image to Docker Hub
        run: |
          docker push leslie18/ubuntu:latest

      #- name: Log in to Private Registry
       # run: |
        #  echo "${{ secrets.PRIVATE_REGISTRY_PASSWORD }}" | docker login your-private-registry-url -u "${{ secrets.PRIVATE_REGISTRY_USERNAME }}" --password-stdin

      #- name: Tag Docker image for Private Registry
       # run: |
       #   docker tag leslie18/ubuntu:latest your-private-registry-url/leslie18/ubuntu:latest

      #- name: Push Docker image to Private Registry
       # run: |
       #   docker push your-private-registry-url/leslie18/ubuntu:latest
